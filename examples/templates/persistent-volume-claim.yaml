
kind: PersistentVolumeClaim
apiVersion: v1beta3
metadata:
  # Name is unique within a namespace.  Name is required when creating resources, although
  # some resources may allow a client to request the generation of an appropriate name
  # automatically. Name is primarily intended for creation idempotence and configuration
  # definition.
  # 
  # String that identifies an object. Must be unique within a namespace; 
  # Cannot be updated.
  name: 

  # GenerateName indicates that the name should be made unique by the server prior to persisting
  # it. A non-empty value for the field indicates the name will be made unique (and the name
  # returned to the client will be different than the name passed). The value of this field will
  # be combined with a unique suffix on the server if the Name field has not been provided.
  # The provided value must be valid within the rules for Name, and may be truncated by the length
  # of the suffix required to make the value unique on the server.
  #
  # If this field is specified, and Name is not present, the server will NOT return a 409 if the
  # generated name exists - instead, it will either return 201 Created or 500 with Reason
  # ServerTimeout indicating a unique name could not be found in the time allotted, and the client
  # should retry (optionally after the time indicated in the Retry-After header).
  generateName:

  # Namespace defines the space within which name must be unique. An empty namespace is
  # equivalent to the "default" namespace, but "default" is the canonical representation.
  # Not all objects are required to be scoped to a namespace - the value of this field for
  # those objects will be empty.
  namespace:

  # Labels are key value pairs that may be used to scope and select individual resources.
  labels:
    name: value

  # Annotations are unstructured key value data stored with a resource that may be set by
  # external tooling. They are not queryable and should be preserved when modifying
  # objects.
  annotations:
    name: value

# Spec defines the behavior of a pod
spec:

  # A description of the persistent volume's resources and capacity.
  capacity:

    # Volume size, in bytes (e,g. 5Gi = 5GiB = 5 * 1024 * 1024 * 1024)
    storage: 

  # AccessModes contains all ways the volume can be mounted
  accessModes: 
    - ReadWriteOnce
    - ReadOnlyMany
    - ReadWriteMany







